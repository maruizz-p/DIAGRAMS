{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red42\green49\blue64;\red245\green245\blue246;}
{\*\expandedcolortbl;;\cssrgb\c21569\c25490\c31765;\cssrgb\c96863\c96863\c97255;}
\margl1440\margr1440\vieww50700\viewh25480\viewkind0
\deftab720
\pard\pardeftab720\sa400\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Un nodo en C es una estructura de datos que contiene informaci\'f3n y un puntero que apunta a otra estructura de datos similar. Los nodos se utilizan para construir estructuras de datos din\'e1micas, como listas enlazadas.\
Cada nodo almacena informaci\'f3n en su interior, pero tambi\'e9n tiene un puntero que apunta a otro nodo, formando una cadena de nodos. De esta manera, puedes agregar o quitar un nodo de la cadena simplemente cambiando los punteros que apuntan a \'e9l, lo que hace que sea m\'e1s f\'e1cil manipular la estructura de datos.\
\pard\pardeftab720\partightenfactor0
\cf2 Adem\'e1s, los nodos tambi\'e9n son como direcciones de memoria, ya que cada nodo en una lista enlazada est\'e1 almacenado en una ubicaci\'f3n de memoria diferente en el sistema. Pero en lugar de acceder a los nodos directamente a trav\'e9s de sus direcciones de memoria, se accede a ellos a trav\'e9s de punteros que apuntan a ellos. Esto hace que sea m\'e1s f\'e1cil manipular la lista sin tener que preocuparse por las direcciones de memoria exactas de cada nodo\
}